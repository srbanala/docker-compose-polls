def index(request):
	latest_question_list=Question.objects.order_by('pub_date')[:5]
	context={'latest_question_list':latest_question_list}
	return render(request,'polls/index.html',context)
        #template=loader.get_template('polls/index.html')
	#context={
  	#	'latest_question_list':latest_question_list,
	#	}
        #return HttpResponse(template.render(context,request))
	




def index(request):
	latest_question_list=Question.objects.order_by('pub_date')[:5]
	context={'latest_question_list':latest_question_list}
	return render(request,'polls/index.html',context)
        #template=loader.get_template('polls/index.html')
	#context={
  	#	'latest_question_list':latest_question_list,
	#	}
        #return HttpResponse(template.render(context,request))
	

def detail(request,question_id):
	question=get_object_or_404(Question,pk=question_id)
	return render(request,'polls/detail.html',{'question':question_id})


4





def detail(request,question_id):
	question=get_object_or_404(Question,pk=question_id)
	return render(request,'polls/detail.html',{'question':question})

def results(request,question_id):
	question=get_object_or_404(Question,pk=question_id)	
	return HttpResponse(request,'polls/results.html',{'question':question})


def vote(request,question_id):
	question=get_object_or_404(Question,pk=question_id)
	try:
		selected_choice=question.choice_set.get(pk=request.POST['choice'])
	except(KeyError, Choice.DoesNotExist):
		return render(request,'polls/detail.html',{'question':question,'error_message':" you didn't select a choice.",})
	else:
		selected_choice.votes +=1
		selected_choice.save()		
	return HttpResponseRedirect(reverse('polls:results',args=(question.id,)))



def results(request,question_id):
	question=get_object_or_404(Question,pk=question_id)	
	return HttpResponse(request,'polls/results.html',{'question':question})


def vote(request,question_id):
	question=get_object_or_404(Question,pk=question_id)
	try:
		selected_choice=question.choice_set.get(pk=request.POST['choice'])
	except(KeyError, Choice.DoesNotExist):
		return render(request,'polls/detail.html',{'question':question,'error_message':" you didn't select a choice.",})
	else:
		selected_choice.votes +=1
		selected_choice.save()		
	return HttpResponseRedirect(reverse('polls:results',args=(question.id,)))





<h1>{{ question.question_text} }</h1>

{% if error_message %}<p><strong>{{ error_message }}</strong></p>{% endif %}
<form action="{% url 'polls:vote' question.id %}" method="post">
{ % crsf_token %}
{ % for choice in question.choice_set.all %}
  <input type="radio" name="choice" id="choice{{ forloop.counter }}" value=" {{choice.id}} ">
 <lable for="choice{{ forloop.counter }}">{{ choice.choice_text }}</lable> <br>
{ % endfor %}
<input type="submit" value="vote">
</form>

===============================================================================

def detail(request,question_id):
	question=get_object_or_404(Question,pk=question_id)
	return render(request,'polls/detail.html',{'question':question})

def results(request,question_id):
	question=get_object_or_404(Question,pk=question_id)	
	return HttpResponse(request,'polls/results.html',{'question':question})


def vote(request,question_id):
	question=get_object_or_404(Question,pk=question_id)
	try:
		selected_choice=question.choice_set.get(pk=request.POST['choice'])
	except(KeyError, Choice.DoesNotExist):
		return render(request,'polls/detail.html',{'question':question,'error_message':" you didn't select a choice.",})
	else:
		selected_choice.votes +=1
		selected_choice.save()		
	return HttpResponseRedirect(reverse('polls:results',args=(question.id,)))


========================================

path('<int:question_id>/',views.detail,name='detail'),
 	path('<int:question_id>/results/',views.results,name='results'),
	path('<int:question_id>/vote/',views.vote,name='vote'),

=====================================================

<h1>{{ question.question_text }}</h1>

{% if error_message %}<p><strong>{{ error_message }}</strong></p>{% endif %}

<form action="{% url 'polls:vote' question.id %}" method="post">
{% csrf_token %}
{% for choice in question.choice_set.all %}
    <input type="radio" name="choice" id="choice{{ forloop.counter }}" value="{{ choice.id }}">
    <label for="choice{{ forloop.counter }}">{{ choice.choice_text }}</label><br>
{% endfor %}
<input type="submit" value="Vote">
</form>


=========================Index.html=============================

{% if latest_question_list %}
    <ul>
    {% for question in latest_question_list %}
       <li><a href="/polls/{{ question.id }}/">{{ question.question_text }}</a></li>
       <li><a href="{% url 'detail' question.id %}">{{question.question_text}}</a></li>
       <li><a href="{% url 'polls:detail' question.id %}">{{question.question_text}}</a></li>
    {% endfor %}
    </ul>
{% else %}
    <p>No polls are available.</p>
{% endif %}